For isolating different version of pythons in ubuntu:

https://realpython.com/intro-to-pyenv/
https://github.com/pyenv/pyenv-installer   (this one is more accurate then 1st link)

follow these blogs to install pyenv.... 
for instance you can run this command to install pyenv

curl -L https://raw.githubusercontent.com/yyuu/pyenv-installer/master/bin/pyenv-installer | bash

after this command run these commands 

sudo apt-get update && sudo apt-get upgrade
sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev git

once u install u will get an error. pyenv not install like that
blc the pyenv is not recognized blc it is not added in the ubuntu user path yet. so for that go back to 
home in terminal. 
find .bashrc file there..... open the file
add these 3 lines 

PATH="$HOME/.pyenv/bin:$PATH"
eval "$(pyenv init -)"
eval "$(pyenv virtualenv-init -)"

once these 3 lines are added you can install python 3.7 by simply saying 
pyenv install 3.7.1

once installed, you can check which python version you are currently using by saying
pyenv versions

for choosing any specific python version you can use global keyword such as:
pyenv global 3.7.1

and now u can make environment and can install requirements.txt file packages.
For making python virtual environment u can use this command

python -m venv <ENVIRONEMNT_NAME HERE>

and then for activating the environment run this line.
source <ENVIRONEMENT_NAME>/bin/activate

after that you can run your desired application by saying python app.py

##########################################################################################################################
###########################################################################################################################

INFORMATION REGARDING DEPLOYMENT

step 1: Go to azure portal 
click create resource and select web app

step 2: fill out the form you see on your screen. for e.g. selecting resource group providing web app name and all etc..
choose os linux

step 3: after deployment go to deployment center. here choose github. local git mean all the files are present in your local 
system and from there you want to deploy it on azure. 

click continue and select app service and continue. 

step 4: select organization which is your github username and select repository which is ur current github repo. 
then select master branch. after this continue and finish. 


step 5: In the deployment center u can see the logs as well. In the log u will see Deployment successful which means that your webapp 
is deployed successfully. 

# when ur web app is runing u can click log stream in azure to see everything in cmd prompt live. 
step 6: In azure app service click ur created web app and click overview there u will find the deployed web app link.  





